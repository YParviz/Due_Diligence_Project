{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api/users/';\nexport async function getUsers() {\n  try {\n    const response = await axios.get(API_URL, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch users');\n  }\n}\nexport async function updateUser(userId, updatedData) {\n  const url = `${API_URL}${userId}/`;\n  try {\n    const response = await axios.patch(url, updatedData, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to update user with ID ${userId}`);\n  }\n}\nexport async function getUserById(userId) {\n  const url = `${API_URL}${userId}/`;\n  try {\n    const response = await axios.get(url, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to fetch user with ID ${userId}`);\n  }\n}\nconst API_REGISTER_URL = 'http://127.0.0.1:8000/api/register/';\nexport async function registerUser(userData) {\n  try {\n    const response = await axios.post(API_REGISTER_URL, userData, {\n      withCredentials: true\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n}","map":{"version":3,"names":["axios","API_URL","getUsers","response","get","withCredentials","data","error","Error","updateUser","userId","updatedData","url","patch","getUserById","API_REGISTER_URL","registerUser","userData","post"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/users/';\r\n\r\nexport async function getUsers() {\r\n    try {\r\n        const response = await axios.get(API_URL, { withCredentials: true });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to fetch users');\r\n    }\r\n}\r\n\r\nexport async function updateUser(userId, updatedData) {\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.patch(url, updatedData, { withCredentials: true });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to update user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function getUserById(userId) {\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.get(url, { withCredentials: true });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nconst API_REGISTER_URL = 'http://127.0.0.1:8000/api/register/';\r\n\r\nexport async function registerUser(userData) {\r\n    try {\r\n        const response = await axios.post(API_REGISTER_URL, userData, { withCredentials: true });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to register user');\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,EAAE;MAAEI,eAAe,EAAE;IAAK,CAAC,CAAC;IACpE,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;AACJ;AAEA,OAAO,eAAeC,UAAUA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAClD,MAAMC,GAAG,GAAI,GAAEX,OAAQ,GAAES,MAAO,GAAE;EAClC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACa,KAAK,CAACD,GAAG,EAAED,WAAW,EAAE;MAAEN,eAAe,EAAE;IAAK,CAAC,CAAC;IAC/E,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAE,iCAAgCE,MAAO,EAAC,CAAC;EAC9D;AACJ;AAEA,OAAO,eAAeI,WAAWA,CAACJ,MAAM,EAAE;EACtC,MAAME,GAAG,GAAI,GAAEX,OAAQ,GAAES,MAAO,GAAE;EAClC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACQ,GAAG,EAAE;MAAEP,eAAe,EAAE;IAAK,CAAC,CAAC;IAChE,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAE,gCAA+BE,MAAO,EAAC,CAAC;EAC7D;AACJ;AAEA,MAAMK,gBAAgB,GAAG,qCAAqC;AAE9D,OAAO,eAAeC,YAAYA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMH,KAAK,CAACkB,IAAI,CAACH,gBAAgB,EAAEE,QAAQ,EAAE;MAAEZ,eAAe,EAAE;IAAK,CAAC,CAAC;IACxF,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}