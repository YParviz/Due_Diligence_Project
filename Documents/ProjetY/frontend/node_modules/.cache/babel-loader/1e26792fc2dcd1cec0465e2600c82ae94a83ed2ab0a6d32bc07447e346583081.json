{"ast":null,"code":"import axios from'axios';const API_URL='http://127.0.0.1:8000/api/users/';const API_REGISTER_URL='http://127.0.0.1:8000/api/register/';const API_LOGIN_URL='http://127.0.0.1:8000/api/login/';// Fonction pour obtenir le token d'authentification depuis le stockage local (localStorage ou sessionStorage)\nfunction getAuthToken(){return localStorage.getItem('token');}export async function getUsers(){const authToken=getAuthToken();try{const response=await axios.get(API_URL,{headers:{Authorization:\"Token \".concat(authToken)}});return response.data;}catch(error){throw new Error('Failed to fetch users');}}export async function updateUser(userId,updatedData){const authToken=getAuthToken();const url=\"\".concat(API_URL).concat(userId,\"/\");try{const response=await axios.patch(url,updatedData,{headers:{Authorization:\"Token \".concat(authToken)}});return response.data;}catch(error){throw new Error(\"Failed to update user with ID \".concat(userId));}}export async function getUserById(userId){const authToken=getAuthToken();const url=\"\".concat(API_URL).concat(userId,\"/\");try{const response=await axios.get(url,{headers:{Authorization:\"Token \".concat(authToken)}});return response.data;}catch(error){throw new Error(\"Failed to fetch user with ID \".concat(userId));}}// Fonction pour créer un nouveau compte utilisateur\nexport async function registerUser(userData){try{const response=await axios.post(API_REGISTER_URL,userData);return response.data;}catch(error){throw new Error('Failed to register user');}}// Fonction pour se connecter et obtenir un token\nexport async function loginUser(username,password){try{const response=await axios.post(API_LOGIN_URL,{username:username,password:password});const token=response.data.token;localStorage.setItem('token',token);console.log('Token:',token);}catch(error){console.error('Login error:',error);throw new Error('Failed to login');}}// Exemple d'utilisation de la fonction loginUser\n// loginUser('yourUsername', 'yourPassword');","map":{"version":3,"names":["axios","API_URL","API_REGISTER_URL","API_LOGIN_URL","getAuthToken","localStorage","getItem","getUsers","authToken","response","get","headers","Authorization","concat","data","error","Error","updateUser","userId","updatedData","url","patch","getUserById","registerUser","userData","post","loginUser","username","password","token","setItem","console","log"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/frontend/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/users/';\r\nconst API_REGISTER_URL = 'http://127.0.0.1:8000/api/register/';\r\nconst API_LOGIN_URL = 'http://127.0.0.1:8000/api/login/';\r\n\r\n// Fonction pour obtenir le token d'authentification depuis le stockage local (localStorage ou sessionStorage)\r\nfunction getAuthToken() {\r\n    return localStorage.getItem('token');\r\n}\r\n\r\nexport async function getUsers() {\r\n    const authToken = getAuthToken();\r\n    try {\r\n        const response = await axios.get(API_URL, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to fetch users');\r\n    }\r\n}\r\n\r\nexport async function updateUser(userId, updatedData) {\r\n    const authToken = getAuthToken();\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.patch(url, updatedData, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to update user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function getUserById(userId) {\r\n    const authToken = getAuthToken();\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.get(url, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch user with ID ${userId}`);\r\n    }\r\n}\r\n\r\n// Fonction pour créer un nouveau compte utilisateur\r\nexport async function registerUser(userData) {\r\n    try {\r\n        const response = await axios.post(API_REGISTER_URL, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to register user');\r\n    }\r\n}\r\n\r\n// Fonction pour se connecter et obtenir un token\r\nexport async function loginUser(username, password) {\r\n    try {\r\n        const response = await axios.post(API_LOGIN_URL, {\r\n            username: username,\r\n            password: password\r\n        });\r\n        const token = response.data.token;\r\n        localStorage.setItem('token', token);\r\n        console.log('Token:', token);\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw new Error('Failed to login');\r\n    }\r\n}\r\n\r\n// Exemple d'utilisation de la fonction loginUser\r\n// loginUser('yourUsername', 'yourPassword');\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}