{"ast":null,"code":"import api from './axiosConfig';\nfunction getAuthToken() {\n  return localStorage.getItem('token');\n}\nexport async function getUsers() {\n  try {\n    const authToken = localStorage.getItem('token');\n    const response = await api.get('http://127.0.0.1:8000/api/users/', {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error.response || error.message || error);\n    throw new Error('Failed to fetch users');\n  }\n}\nexport async function updateUser(userId, updatedData) {\n  const authToken = getAuthToken();\n  const url = `users/${userId}/`; // Correction: Utilisation de l'URL relative\n  try {\n    const response = await api.patch(url, updatedData, {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to update user with ID ${userId}`);\n  }\n}\nexport async function getUserById(userId) {\n  const authToken = getAuthToken();\n  const url = `users/${userId}/`; // Correction: Utilisation de l'URL relative\n  try {\n    const response = await api.get(url, {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to fetch user with ID ${userId}`);\n  }\n}\n\n// Fonction pour créer un nouveau compte utilisateur\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('register/', userData); // Correction: Utilisation de l'URL relative\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n}\n\n// Fonction pour se connecter et obtenir un token\nexport async function loginUser(username, password) {\n  try {\n    const response = await api.post('login/', {\n      username: username,\n      password: password\n    });\n    const token = response.data.token;\n    localStorage.setItem('token', token);\n    // Envoi du token avec chaque requête dans axiosConfig.js, donc pas besoin de le faire ici explicitement\n    return token;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw new Error('Invalid username or password');\n  }\n}","map":{"version":3,"names":["api","getAuthToken","localStorage","getItem","getUsers","authToken","response","get","headers","Authorization","data","error","console","message","Error","updateUser","userId","updatedData","url","patch","getUserById","registerUser","userData","post","loginUser","username","password","token","setItem"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/frontend/src/api/userApi.js"],"sourcesContent":["import api from './axiosConfig';\r\n\r\nfunction getAuthToken() {\r\n    return localStorage.getItem('token');\r\n}\r\n\r\nexport async function getUsers() {\r\n    try {\r\n        const authToken = localStorage.getItem('token');\r\n        const response = await api.get('http://127.0.0.1:8000/api/users/', {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error.response || error.message || error);\r\n        throw new Error('Failed to fetch users');\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport async function updateUser(userId, updatedData) {\r\n    const authToken = getAuthToken();\r\n    const url = `users/${userId}/`; // Correction: Utilisation de l'URL relative\r\n    try {\r\n        const response = await api.patch(url, updatedData, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to update user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function getUserById(userId) {\r\n    const authToken = getAuthToken();\r\n    const url = `users/${userId}/`; // Correction: Utilisation de l'URL relative\r\n    try {\r\n        const response = await api.get(url, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch user with ID ${userId}`);\r\n    }\r\n}\r\n\r\n// Fonction pour créer un nouveau compte utilisateur\r\nexport async function registerUser(userData) {\r\n    try {\r\n        const response = await api.post('register/', userData); // Correction: Utilisation de l'URL relative\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to register user');\r\n    }\r\n}\r\n\r\n// Fonction pour se connecter et obtenir un token\r\nexport async function loginUser(username, password) {\r\n    try {\r\n        const response = await api.post('login/', {\r\n            username: username,\r\n            password: password\r\n        });\r\n        const token = response.data.token;\r\n        localStorage.setItem('token', token);\r\n        // Envoi du token avec chaque requête dans axiosConfig.js, donc pas besoin de le faire ici explicitement\r\n        return token;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw new Error('Invalid username or password');\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,eAAe;AAE/B,SAASC,YAAYA,CAAA,EAAG;EACpB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,IAAI;IACA,MAAMC,SAAS,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC/C,MAAMG,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAAC,kCAAkC,EAAE;MAC/DC,OAAO,EAAE;QACLC,aAAa,EAAE,SAASJ,SAAS;MACrC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACE,OAAO,IAAIF,KAAK,CAAC;IAChF,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;EAC5C;AACJ;AAMA,OAAO,eAAeC,UAAUA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAClD,MAAMZ,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,MAAMiB,GAAG,GAAG,SAASF,MAAM,GAAG,CAAC,CAAC;EAChC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMN,GAAG,CAACmB,KAAK,CAACD,GAAG,EAAED,WAAW,EAAE;MAC/CT,OAAO,EAAE;QACLC,aAAa,EAAE,SAASJ,SAAS;MACrC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,iCAAiCE,MAAM,EAAE,CAAC;EAC9D;AACJ;AAEA,OAAO,eAAeI,WAAWA,CAACJ,MAAM,EAAE;EACtC,MAAMX,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,MAAMiB,GAAG,GAAG,SAASF,MAAM,GAAG,CAAC,CAAC;EAChC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMN,GAAG,CAACO,GAAG,CAACW,GAAG,EAAE;MAChCV,OAAO,EAAE;QACLC,aAAa,EAAE,SAASJ,SAAS;MACrC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,gCAAgCE,MAAM,EAAE,CAAC;EAC7D;AACJ;;AAEA;AACA,OAAO,eAAeK,YAAYA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMN,GAAG,CAACuB,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC,CAAC,CAAC;IACxD,OAAOhB,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ;;AAEA;AACA,OAAO,eAAeU,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAChD,IAAI;IACA,MAAMpB,QAAQ,GAAG,MAAMN,GAAG,CAACuB,IAAI,CAAC,QAAQ,EAAE;MACtCE,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGrB,QAAQ,CAACI,IAAI,CAACiB,KAAK;IACjCzB,YAAY,CAAC0B,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;IACpC;IACA,OAAOA,KAAK;EAChB,CAAC,CAAC,OAAOhB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;EACnD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}