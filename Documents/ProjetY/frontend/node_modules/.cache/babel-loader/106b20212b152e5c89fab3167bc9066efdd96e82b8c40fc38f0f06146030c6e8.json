{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miskinyar\\\\Documents\\\\ProjetY\\\\my-first-react-app\\\\src\\\\components\\\\ValidateUser.jsx\",\n  _s = $RefreshSig$();\n// ValidateUser.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport acceptedLogo from '../images/accepted.png';\nimport pendingLogo from '../images/pending.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const companyName = searchParams.get('company');\n  const username = searchParams.get('username');\n  const [validationStatus, setValidationStatus] = useState(null);\n  const handleValidation = async isValidated => {\n    try {\n      if (userId) {\n        const response = await axios.patch(`http://127.0.0.1:8000/api/validate/${userId}/`, {\n          is_validated: isValidated\n        });\n        console.log('Validation status updated:', response.data);\n        setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\n        navigate('/users');\n      } else {\n        console.error('Error: userId is undefined');\n      }\n    } catch (error) {\n      console.error('Error updating validation status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validationContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Validate User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Company Name: \", companyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: validationStatus === 'Accepted' ? acceptedLogo : pendingLogo,\n      alt: validationStatus,\n      className: \"statusLogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(true),\n      children: \"Accept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(false),\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ValidateUser, \"X3Ds0t+BEYn5/OtiZgVYsCXOnss=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = ValidateUser;\nexport default ValidateUser;\nvar _c;\n$RefreshReg$(_c, \"ValidateUser\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","useNavigate","axios","acceptedLogo","pendingLogo","jsxDEV","_jsxDEV","ValidateUser","_s","userId","location","navigate","searchParams","URLSearchParams","search","companyName","get","username","validationStatus","setValidationStatus","handleValidation","isValidated","response","patch","is_validated","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/components/ValidateUser.jsx"],"sourcesContent":["// ValidateUser.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport acceptedLogo from '../images/accepted.png';\r\nimport pendingLogo from '../images/pending.png';\r\n\r\nfunction ValidateUser() {\r\n    const { userId } = useParams();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const searchParams = new URLSearchParams(location.search);\r\n    const companyName = searchParams.get('company');\r\n    const username = searchParams.get('username');\r\n    const [validationStatus, setValidationStatus] = useState(null);\r\n\r\n    const handleValidation = async (isValidated) => {\r\n        try {\r\n            if (userId) {\r\n                const response = await axios.patch(`http://127.0.0.1:8000/api/validate/${userId}/`, { is_validated: isValidated });\r\n                console.log('Validation status updated:', response.data);\r\n                setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\r\n                navigate('/users');\r\n            } else {\r\n                console.error('Error: userId is undefined');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating validation status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"validationContainer\">\r\n            <h1>Validate User</h1>\r\n            <p>Company Name: {companyName}</p>\r\n            <p>Username: {username}</p>\r\n            <img src={validationStatus === 'Accepted' ? acceptedLogo : pendingLogo} alt={validationStatus} className=\"statusLogo\" />\r\n            <button onClick={() => handleValidation(true)}>Accept</button>\r\n            <button onClick={() => handleValidation(false)}>Reject</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ValidateUser;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}