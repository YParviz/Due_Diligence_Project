{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miskinyar\\\\Documents\\\\ProjetY\\\\my-first-react-app\\\\src\\\\components\\\\ValidateUser.jsx\",\n  _s = $RefreshSig$();\n// ValidateUser.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getUserById, updateUser } from '../api/userApi';\nimport acceptedLogo from '../images/accepted.png';\nimport pendingLogo from '../images/pending.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [companyName, setCompanyName] = useState('');\n  const [username, setUsername] = useState('');\n  const [validationStatus, setValidationStatus] = useState(null);\n  useEffect(() => {\n    async function fetchUserData() {\n      try {\n        const userData = await getUserById(userId);\n        console.log(userData);\n        setCompanyName(userData.company);\n        setUsername(userData.username);\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    }\n    fetchUserData();\n  }, [userId]);\n  const handleValidation = async isValidated => {\n    try {\n      const updatedData = {\n        is_validated: isValidated\n      };\n      await updateUser(userId, updatedData);\n      console.log('Validation status updated');\n      setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\n      navigate('/users');\n    } catch (error) {\n      console.error('Error updating validation status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validationContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Validate User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Company Name: \", companyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: validationStatus === 'Accepted' ? acceptedLogo : pendingLogo,\n      alt: validationStatus,\n      className: \"statusLogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(true),\n      children: \"Accept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(false),\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(ValidateUser, \"XdzINvNuNL7VDGw1Yc5nR4jswFw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ValidateUser;\nexport default ValidateUser;\nvar _c;\n$RefreshReg$(_c, \"ValidateUser\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getUserById","updateUser","acceptedLogo","pendingLogo","jsxDEV","_jsxDEV","ValidateUser","_s","userId","navigate","companyName","setCompanyName","username","setUsername","validationStatus","setValidationStatus","fetchUserData","userData","console","log","company","error","handleValidation","isValidated","updatedData","is_validated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/components/ValidateUser.jsx"],"sourcesContent":["// ValidateUser.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { getUserById, updateUser } from '../api/userApi';\r\nimport acceptedLogo from '../images/accepted.png';\r\nimport pendingLogo from '../images/pending.png';\r\n\r\nfunction ValidateUser() {\r\n    const { userId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [validationStatus, setValidationStatus] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchUserData() {\r\n            try {\r\n                const userData = await getUserById(userId);\r\n                console.log(userData);\r\n                setCompanyName(userData.company);\r\n                setUsername(userData.username);\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n            }\r\n        }\r\n    \r\n        fetchUserData();\r\n    }, [userId]);\r\n    \r\n    const handleValidation = async (isValidated) => {\r\n        try {\r\n            const updatedData = { is_validated: isValidated };\r\n            await updateUser(userId, updatedData);\r\n            console.log('Validation status updated');\r\n            setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\r\n            navigate('/users');\r\n        } catch (error) {\r\n            console.error('Error updating validation status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"validationContainer\">\r\n            <h1>Validate User</h1>\r\n            <p>Company Name: {companyName}</p>\r\n            <p>Username: {username}</p>\r\n            <img src={validationStatus === 'Accepted' ? acceptedLogo : pendingLogo} alt={validationStatus} className=\"statusLogo\" />\r\n            <button onClick={() => handleValidation(true)}>Accept</button>\r\n            <button onClick={() => handleValidation(false)}>Reject</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ValidateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}