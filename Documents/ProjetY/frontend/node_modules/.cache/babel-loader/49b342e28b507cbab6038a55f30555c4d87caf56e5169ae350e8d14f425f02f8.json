{"ast":null,"code":"// userApi.js\nimport api from './axiosConfig';\nexport async function getUsers() {\n  try {\n    const response = await api.get('users/');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error.response || error.message || error);\n    throw new Error('Failed to fetch users');\n  }\n}\nexport async function updateUser(userId, updatedData) {\n  try {\n    const response = await api.patch(`users/${userId}/`, updatedData);\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to update user with ID ${userId}`);\n  }\n}\nexport async function getUserById(userId) {\n  try {\n    const response = await api.get(`users/${userId}/`);\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to fetch user with ID ${userId}`);\n  }\n}\nexport async function registerUser(userData) {\n  try {\n    const response = await api.post('register/', userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n}\nexport async function loginUser(username, password) {\n  try {\n    const response = await api.post('login/', {\n      username: username,\n      password: password\n    });\n    const token = response.data.token;\n    localStorage.setItem('token', token);\n    // Ajoutez le token dans les en-têtes de l'API axios\n    api.defaults.headers.common['Authorization'] = `Token ${token}`;\n    return token;\n  } catch (error) {\n    console.error('Login error:', error);\n    throw new Error('Invalid username or password');\n  }\n}","map":{"version":3,"names":["api","getUsers","response","get","data","error","console","message","Error","updateUser","userId","updatedData","patch","getUserById","registerUser","userData","post","loginUser","username","password","token","localStorage","setItem","defaults","headers","common"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/frontend/src/api/userApi.js"],"sourcesContent":["// userApi.js\r\nimport api from './axiosConfig';\r\n\r\nexport async function getUsers() {\r\n    try {\r\n        const response = await api.get('users/');\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error fetching users:', error.response || error.message || error);\r\n        throw new Error('Failed to fetch users');\r\n    }\r\n}\r\n\r\nexport async function updateUser(userId, updatedData) {\r\n    try {\r\n        const response = await api.patch(`users/${userId}/`, updatedData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to update user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function getUserById(userId) {\r\n    try {\r\n        const response = await api.get(`users/${userId}/`);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function registerUser(userData) {\r\n    try {\r\n        const response = await api.post('register/', userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to register user');\r\n    }\r\n}\r\n\r\nexport async function loginUser(username, password) {\r\n    try {\r\n        const response = await api.post('login/', {\r\n            username: username,\r\n            password: password\r\n        });\r\n        const token = response.data.token;\r\n        localStorage.setItem('token', token);\r\n        // Ajoutez le token dans les en-têtes de l'API axios\r\n        api.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n        return token;\r\n    } catch (error) {\r\n        console.error('Login error:', error);\r\n        throw new Error('Invalid username or password');\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,eAAe;AAE/B,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,QAAQ,CAAC;IACxC,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACE,OAAO,IAAIF,KAAK,CAAC;IAChF,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;EAC5C;AACJ;AAEA,OAAO,eAAeC,UAAUA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAClD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMF,GAAG,CAACY,KAAK,CAAC,SAASF,MAAM,GAAG,EAAEC,WAAW,CAAC;IACjE,OAAOT,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,iCAAiCE,MAAM,EAAE,CAAC;EAC9D;AACJ;AAEA,OAAO,eAAeG,WAAWA,CAACH,MAAM,EAAE;EACtC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,SAASO,MAAM,GAAG,CAAC;IAClD,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,gCAAgCE,MAAM,EAAE,CAAC;EAC7D;AACJ;AAEA,OAAO,eAAeI,YAAYA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACA,MAAMb,QAAQ,GAAG,MAAMF,GAAG,CAACgB,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;IACtD,OAAOb,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ;AAEA,OAAO,eAAeS,SAASA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAChD,IAAI;IACA,MAAMjB,QAAQ,GAAG,MAAMF,GAAG,CAACgB,IAAI,CAAC,QAAQ,EAAE;MACtCE,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;IACd,CAAC,CAAC;IACF,MAAMC,KAAK,GAAGlB,QAAQ,CAACE,IAAI,CAACgB,KAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;IACpC;IACApB,GAAG,CAACuB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAASL,KAAK,EAAE;IAC/D,OAAOA,KAAK;EAChB,CAAC,CAAC,OAAOf,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;EACnD;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}