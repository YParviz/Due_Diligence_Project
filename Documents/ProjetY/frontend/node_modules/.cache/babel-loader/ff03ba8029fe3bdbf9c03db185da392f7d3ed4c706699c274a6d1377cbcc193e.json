{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miskinyar\\\\Documents\\\\ProjetY\\\\my-first-react-app\\\\src\\\\components\\\\ValidateUser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport acceptedLogo from '../images/accepted.png';\nimport pendingLogo from '../images/pending.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ValidateUser() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const navigate = useNavigate();\n  const [companyName, setCompanyName] = useState('');\n  const [username, setUsername] = useState('');\n  const [validationStatus, setValidationStatus] = useState(null);\n  useEffect(() => {\n    async function fetchUserData() {\n      try {\n        const response = await axios.get(`http://localhost:8000/api/users/${userId}/`);\n        const userData = response.data; // Les données ne sont pas dans un tableau\n        console.log(userData); // Vérifier les données récupérées\n        setCompanyName(userData.company); // Utilisez le champ company au lieu de company_name\n        setUsername(userData.user.username); // Assurez-vous d'accéder au champ username dans la table appropriée\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    }\n    fetchUserData();\n  }, [userId]);\n  const handleValidation = async isValidated => {\n    try {\n      if (userId) {\n        const response = await axios.patch(`http://127.0.0.1:8000/api/validate/${userId}/`, {\n          is_validated: isValidated\n        });\n        console.log('Validation status updated:', response.data);\n        setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\n        navigate('/users');\n      } else {\n        console.error('Error: userId is undefined');\n      }\n    } catch (error) {\n      console.error('Error updating validation status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"validationContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Validate User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Company Name: \", companyName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Username: \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: validationStatus === 'Accepted' ? acceptedLogo : pendingLogo,\n      alt: validationStatus,\n      className: \"statusLogo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(true),\n      children: \"Accept\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleValidation(false),\n      children: \"Reject\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(ValidateUser, \"XdzINvNuNL7VDGw1Yc5nR4jswFw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ValidateUser;\nexport default ValidateUser;\nvar _c;\n$RefreshReg$(_c, \"ValidateUser\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","acceptedLogo","pendingLogo","jsxDEV","_jsxDEV","ValidateUser","_s","userId","navigate","companyName","setCompanyName","username","setUsername","validationStatus","setValidationStatus","fetchUserData","response","get","userData","data","console","log","company","user","error","handleValidation","isValidated","patch","is_validated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/components/ValidateUser.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport acceptedLogo from '../images/accepted.png';\r\nimport pendingLogo from '../images/pending.png';\r\n\r\nfunction ValidateUser() {\r\n    const { userId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [companyName, setCompanyName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [validationStatus, setValidationStatus] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function fetchUserData() {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/api/users/${userId}/`);\r\n                const userData = response.data; // Les données ne sont pas dans un tableau\r\n                console.log(userData); // Vérifier les données récupérées\r\n                setCompanyName(userData.company); // Utilisez le champ company au lieu de company_name\r\n                setUsername(userData.user.username); // Assurez-vous d'accéder au champ username dans la table appropriée\r\n            } catch (error) {\r\n                console.error('Error fetching user data:', error);\r\n            }\r\n        }\r\n        \r\n    \r\n        fetchUserData();\r\n    }, [userId]);\r\n    \r\n    const handleValidation = async (isValidated) => {\r\n        try {\r\n            if (userId) {\r\n                const response = await axios.patch(`http://127.0.0.1:8000/api/validate/${userId}/`, { is_validated: isValidated });\r\n                console.log('Validation status updated:', response.data);\r\n                setValidationStatus(isValidated ? 'Accepted' : 'Rejected');\r\n                navigate('/users');\r\n            } else {\r\n                console.error('Error: userId is undefined');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error updating validation status:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"validationContainer\">\r\n            <h1>Validate User</h1>\r\n            <p>Company Name: {companyName}</p>\r\n            <p>Username: {username}</p>\r\n            <img src={validationStatus === 'Accepted' ? acceptedLogo : pendingLogo} alt={validationStatus} className=\"statusLogo\" />\r\n            <button onClick={() => handleValidation(true)}>Accept</button>\r\n            <button onClick={() => handleValidation(false)}>Reject</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ValidateUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}