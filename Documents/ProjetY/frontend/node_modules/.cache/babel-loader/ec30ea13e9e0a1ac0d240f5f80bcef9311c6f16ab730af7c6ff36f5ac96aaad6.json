{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miskinyar\\\\Documents\\\\ProjetY\\\\my-first-react-app\\\\src\\\\context\\\\authContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport axios from 'axios';\n\n// Création du contexte d'authentification (authContext)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authContext = /*#__PURE__*/createContext();\n\n// Hook d'utilisation du contexte d'authentification\nexport const useAuth = () => {\n  _s();\n  const context = useContext(authContext);\n  if (!context) throw new Error('There is no AuthProvider');\n  return context;\n};\n\n// Création d'un client Axios avec la configuration de base\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api/'\n});\n\n// Composant fournisseur d'authentification\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    logged: false,\n    data: []\n  });\n\n  // Fonction de connexion\n  const login = async data => {\n    setLoading(true);\n    try {\n      const res = await client.post('login/', data);\n      if (res.status !== 202) throw new Error(res.data['error']);\n      setUser({\n        logged: true,\n        data: res.data\n      });\n    } catch (err) {\n      console.error(err);\n      throw new Error('Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction de déconnexion\n  const logout = async () => {\n    if (!user.logged) return console.log(\"User is not logged\");\n    setLoading(true);\n    try {\n      await client.post('logout/');\n      setUser({\n        logged: false,\n        data: []\n      });\n    } catch (err) {\n      console.error(err);\n      throw new Error('Logout failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction d'inscription\n  const signup = async data => {\n    setLoading(true);\n    try {\n      const res = await client.post('register/', data);\n      return res.data;\n    } catch (err) {\n      console.error(err);\n      throw new Error('Signup failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction de réinitialisation du mot de passe\n  const resetPassword = async email => {\n    setLoading(true);\n    try {\n      const res = await client.post('/reset-password', {\n        email\n      });\n      return res.data; // Retourne les données de la réponse\n    } catch (err) {\n      console.error(err);\n      throw new Error('An error occurred while resetting the password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction de suppression de l'utilisateur\n  const deleteUser = async () => {\n    setLoading(true);\n    try {\n      await client.delete('delete-user/');\n      setUser({\n        logged: false,\n        data: []\n      });\n    } catch (err) {\n      console.error(err);\n      throw new Error('Failed to delete user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Valeur du contexte d'authentification\n  const contextValue = {\n    login,\n    logout,\n    user,\n    setUser,\n    signup,\n    resetPassword,\n    deleteUser,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"jqjU1TiOT7IEJA/0Uv9+w2ucfvw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","jsxDEV","_jsxDEV","authContext","useAuth","_s","context","Error","client","create","baseURL","AuthProvider","children","_s2","loading","setLoading","user","setUser","logged","data","login","res","post","status","err","console","error","logout","log","signup","resetPassword","email","deleteUser","delete","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/context/authContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\n// Création du contexte d'authentification (authContext)\r\nexport const authContext = createContext();\r\n\r\n// Hook d'utilisation du contexte d'authentification\r\nexport const useAuth = () => {\r\n    const context = useContext(authContext);\r\n    if (!context) throw new Error('There is no AuthProvider');\r\n    return context;\r\n}\r\n\r\n// Création d'un client Axios avec la configuration de base\r\nconst client = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/api/',\r\n});\r\n\r\n// Composant fournisseur d'authentification\r\nexport function AuthProvider({ children }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        logged: false,\r\n        data: [],\r\n    });\r\n\r\n    // Fonction de connexion\r\n    const login = async (data) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('login/', data);\r\n            if (res.status !== 202) throw new Error(res.data['error']);\r\n            setUser({ logged: true, data: res.data });\r\n        } catch (err) {\r\n            console.error(err);\r\n            throw new Error('Login failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    // Fonction de déconnexion\r\n    const logout = async () => {\r\n        if (!user.logged) return console.log(\"User is not logged\");\r\n        setLoading(true);\r\n        try {\r\n            await client.post('logout/');\r\n            setUser({ logged: false, data: [] });\r\n        } catch (err) {\r\n            console.error(err);\r\n            throw new Error('Logout failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    // Fonction d'inscription\r\n    const signup = async (data) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('register/', data);\r\n            return res.data;\r\n        } catch (err) {\r\n            console.error(err);\r\n            throw new Error('Signup failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    // Fonction de réinitialisation du mot de passe\r\n    const resetPassword = async (email) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('/reset-password', { email });\r\n            return res.data; // Retourne les données de la réponse\r\n        } catch (err) {\r\n            console.error(err);\r\n            throw new Error('An error occurred while resetting the password');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Fonction de suppression de l'utilisateur\r\n    const deleteUser = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await client.delete('delete-user/');\r\n            setUser({ logged: false, data: [] });\r\n        } catch (err) {\r\n            console.error(err);\r\n            throw new Error('Failed to delete user');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Valeur du contexte d'authentification\r\n    const contextValue = { login, logout, user, setUser, signup, resetPassword, deleteUser, loading };\r\n\r\n    return (\r\n        <authContext.Provider value={contextValue}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}