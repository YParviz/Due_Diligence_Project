{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api/users/';\nconst API_REGISTER_URL = 'http://127.0.0.1:8000/api/register/';\n\n// Fonction pour obtenir le token d'authentification depuis le stockage local (localStorage ou sessionStorage)\nfunction getAuthToken() {\n  return localStorage.getItem('token');\n}\nexport async function getUsers() {\n  const authToken = getAuthToken();\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch users');\n  }\n}\nexport async function updateUser(userId, updatedData) {\n  const authToken = getAuthToken();\n  const url = `${API_URL}${userId}/`;\n  try {\n    const response = await axios.patch(url, updatedData, {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to update user with ID ${userId}`);\n  }\n}\nexport async function getUserById(userId) {\n  const authToken = getAuthToken();\n  const url = `${API_URL}${userId}/`;\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: `Token ${authToken}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(`Failed to fetch user with ID ${userId}`);\n  }\n}\n\n// Fonction pour créer un nouveau compte utilisateur\nexport async function registerUser(userData) {\n  try {\n    const response = await axios.post(API_REGISTER_URL, userData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n}","map":{"version":3,"names":["axios","API_URL","API_REGISTER_URL","getAuthToken","localStorage","getItem","getUsers","authToken","response","get","headers","Authorization","data","error","Error","updateUser","userId","updatedData","url","patch","getUserById","registerUser","userData","post"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/api/userApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/users/';\r\nconst API_REGISTER_URL = 'http://127.0.0.1:8000/api/register/';\r\n\r\n// Fonction pour obtenir le token d'authentification depuis le stockage local (localStorage ou sessionStorage)\r\nfunction getAuthToken() {\r\n    return localStorage.getItem('token');\r\n}\r\n\r\nexport async function getUsers() {\r\n    const authToken = getAuthToken();\r\n    try {\r\n        const response = await axios.get(API_URL, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to fetch users');\r\n    }\r\n}\r\n\r\nexport async function updateUser(userId, updatedData) {\r\n    const authToken = getAuthToken();\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.patch(url, updatedData, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to update user with ID ${userId}`);\r\n    }\r\n}\r\n\r\nexport async function getUserById(userId) {\r\n    const authToken = getAuthToken();\r\n    const url = `${API_URL}${userId}/`;\r\n    try {\r\n        const response = await axios.get(url, {\r\n            headers: {\r\n                Authorization: `Token ${authToken}`\r\n            }\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error(`Failed to fetch user with ID ${userId}`);\r\n    }\r\n}\r\n\r\n// Fonction pour créer un nouveau compte utilisateur\r\nexport async function registerUser(userData) {\r\n    try {\r\n        const response = await axios.post(API_REGISTER_URL, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        throw new Error('Failed to register user');\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,gBAAgB,GAAG,qCAAqC;;AAE9D;AACA,SAASC,YAAYA,CAAA,EAAG;EACpB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACxC;AAEA,OAAO,eAAeC,QAAQA,CAAA,EAAG;EAC7B,MAAMC,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACR,OAAO,EAAE;MACtCS,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQJ,SAAU;MACtC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;AACJ;AAEA,OAAO,eAAeC,UAAUA,CAACC,MAAM,EAAEC,WAAW,EAAE;EAClD,MAAMV,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,MAAMe,GAAG,GAAI,GAAEjB,OAAQ,GAAEe,MAAO,GAAE;EAClC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACmB,KAAK,CAACD,GAAG,EAAED,WAAW,EAAE;MACjDP,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQJ,SAAU;MACtC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAE,iCAAgCE,MAAO,EAAC,CAAC;EAC9D;AACJ;AAEA,OAAO,eAAeI,WAAWA,CAACJ,MAAM,EAAE;EACtC,MAAMT,SAAS,GAAGJ,YAAY,CAAC,CAAC;EAChC,MAAMe,GAAG,GAAI,GAAEjB,OAAQ,GAAEe,MAAO,GAAE;EAClC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACS,GAAG,EAAE;MAClCR,OAAO,EAAE;QACLC,aAAa,EAAG,SAAQJ,SAAU;MACtC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAE,gCAA+BE,MAAO,EAAC,CAAC;EAC7D;AACJ;;AAEA;AACA,OAAO,eAAeK,YAAYA,CAACC,QAAQ,EAAE;EACzC,IAAI;IACA,MAAMd,QAAQ,GAAG,MAAMR,KAAK,CAACuB,IAAI,CAACrB,gBAAgB,EAAEoB,QAAQ,CAAC;IAC7D,OAAOd,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}