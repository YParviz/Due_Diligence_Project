{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Miskinyar\\\\Documents\\\\ProjetY\\\\my-first-react-app\\\\src\\\\context\\\\authContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authContext = /*#__PURE__*/createContext(); // Création du contexte d'authentification (authContext)\n\nexport const useAuth = () => {\n  _s();\n  const context = useContext(authContext);\n  if (!context) throw new Error('There is no AuthProvider');\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst client = axios.create({\n  baseURL: 'http://127.0.0.1:8000/api/',\n  withCredentials: true // Autoriser Axios à envoyer les cookies de session\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState({\n    logged: false,\n    data: []\n  });\n  const login = async data => {\n    setLoading(true);\n    try {\n      const res = await client.post('login/', data);\n      if (res.status === 200) {\n        setUser({\n          logged: true,\n          data: res.data\n        });\n      } else {\n        throw new Error('Login failed');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Login error:', err);\n      throw new Error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Login failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = async () => {\n    if (!user.logged) return console.log(\"User is not logged\");\n    setLoading(true);\n    try {\n      await client.post('logout/');\n      setUser({\n        logged: false,\n        data: []\n      });\n    } catch (err) {\n      console.error('Logout error:', err);\n      throw new Error('Logout failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signup = async data => {\n    setLoading(true);\n    try {\n      const res = await client.post('register/', data);\n      return res.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Signup error:', err);\n      throw new Error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.detail) || 'Signup failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetPassword = async email => {\n    setLoading(true);\n    try {\n      const res = await client.post('reset-password/', {\n        email\n      });\n      return res.data; // Return the response data\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Reset password error:', err);\n      throw new Error(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.detail) || 'An error occurred while resetting the password');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const contextValue = {\n    login,\n    logout,\n    user,\n    setUser,\n    signup,\n    resetPassword,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s2(AuthProvider, \"jqjU1TiOT7IEJA/0Uv9+w2ucfvw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","axios","jsxDEV","_jsxDEV","authContext","useAuth","_s","context","Error","client","create","baseURL","withCredentials","AuthProvider","children","_s2","loading","setLoading","user","setUser","logged","data","login","res","post","status","err","_err$response","_err$response$data","console","error","response","detail","logout","log","signup","_err$response2","_err$response2$data","resetPassword","email","_err$response3","_err$response3$data","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Miskinyar/Documents/ProjetY/my-first-react-app/src/context/authContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const authContext = createContext(); // Création du contexte d'authentification (authContext)\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(authContext);\r\n    if (!context) throw new Error('There is no AuthProvider');\r\n    return context;\r\n}\r\n\r\nconst client = axios.create({\r\n    baseURL: 'http://127.0.0.1:8000/api/',\r\n    withCredentials: true, // Autoriser Axios à envoyer les cookies de session\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState({\r\n        logged: false,\r\n        data: [],\r\n    });\r\n\r\n    const login = async (data) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('login/', data);\r\n            if (res.status === 200) {\r\n                setUser({ logged: true, data: res.data });\r\n            } else {\r\n                throw new Error('Login failed');\r\n            }\r\n        } catch (err) {\r\n            console.error('Login error:', err);\r\n            throw new Error(err.response?.data?.detail || 'Login failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const logout = async () => {\r\n        if (!user.logged) return console.log(\"User is not logged\");\r\n        setLoading(true);\r\n        try {\r\n            await client.post('logout/');\r\n            setUser({ logged: false, data: [] });\r\n        } catch (err) {\r\n            console.error('Logout error:', err);\r\n            throw new Error('Logout failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const signup = async (data) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('register/', data);\r\n            return res.data;\r\n        } catch (err) {\r\n            console.error('Signup error:', err);\r\n            throw new Error(err.response?.data?.detail || 'Signup failed');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const resetPassword = async (email) => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await client.post('reset-password/', { email });\r\n            return res.data; // Return the response data\r\n        } catch (err) {\r\n            console.error('Reset password error:', err);\r\n            throw new Error(err.response?.data?.detail || 'An error occurred while resetting the password');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const contextValue = { login, logout, user, setUser, signup, resetPassword, loading };\r\n\r\n    return (\r\n        <authContext.Provider value={contextValue}>\r\n            {children}\r\n        </authContext.Provider>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}